# Author: Vadim Nasardinov (vadimn@redhat.com)
# Since: 2002-08-16 13:27:09 -0400
# Version: $Id: tidy.properties,v 1.1 2004/12/03 15:11:26 aab Exp $

# To test JTidy with this config file from the command line, do
#  java -classpath /path/to/Tidy.jar org.w3c.tidy.Tidy -config tidy.properties test.html [-f errors.txt]
#
# To comment out a parameter name, use ! (exclamation mark).
# To add a textual comment, use # (pound sign).
# If you have doubts about the format of the property file, see
# http://java.sun.com/j2se/1.3/docs/api/java/util/Properties.html#load(java.io.InputStream)

#   ========== BEGIN CONFIG ===============

# This option specifies if Tidy should add the XML declaration when
# outputting XML or XHTML. Note that if the input already includes an
# <?xml ... ?> declaration then this option will be ignored.
!add-xml-decl

# This option is the same as the add-xml-decl option.
!add-xml-pi

# This option specifies if Tidy should add xml:space="preserve" to
# elements such as <PRE>, <STYLE> and <SCRIPT> when generating XML. This
# is needed if the whitespace in such elements is to be parsed
# appropriately without having access to the DTD.
!add-xml-space

# This option specifies the default "alt=" text Tidy uses for <IMG>
# attributes. This feature is dangerous as it suppresses further
# accessibility warnings. You are responsible for making your documents
# accessible to people who can not see the images!
!alt-text

# This option specifies if Tidy should change the parsing of
# processing instructions to require ?> as the terminator rather than
# >. This option is automatically set if the input is in XML.
!assume-xml-procins

# This option specifies if Tidy should output a line break before each <BR> element
break-before-br         false

# Supported values: ascii, latin1, raw, utf8, iso2022, and mac
# Default: ascii

# This option specifies the character encoding Tidy uses for both the
# input and output.
# For ascii, Tidy will accept Latin-1 (ISO-8859-1) character values,
# but will use entities for all characters whose value > 127.
# For raw, Tidy will output values above 127 without translating them
# into entities.
# For latin1, characters above 255 will be written as entities.
# For utf8, Tidy assumes that both input and output is encoded as
# UTF-8.
# You can use iso2022 for files encoded using the ISO-2022 family
# of encodings e.g. ISO-2022-JP.
# For mac and win1252, Tidy will accept vendor specific character
# values, but will use entities for all characters whose value > 127.
char-encoding           utf8
input-encoding			utf8

# This option specifies if Tidy should strip out surplus
# presentational tags and attributes replacing them by style rules and
# structural markup as appropriate. It works well on the HTML saved by
# Microsoft Office products.
clean                   false

# This option specifies the DOCTYPE declaration generated by Tidy. If
# set to "omit" the output won't contain a DOCTYPE declaration. If set
# to "auto" (the default) Tidy will use an educated guess based upon the
# contents of the document. If set to "strict", Tidy will set the
# DOCTYPE to the strict DTD. If set to "loose", the DOCTYPE is set to
# the loose (transitional) DTD. Alternatively, you can supply a string
# for the formal public identifier (FPI). For example: doctype:
# "-//ACME//DTD HTML 3.14159//EN" If you specify the FPI for an XHTML
# document, Tidy will set the system identifier to the empty
# string. Tidy leaves the DOCTYPE for generic XML documents unchanged.
!doctype

# This option specifies if Tidy should discard empty paragraphs. If
# set to no, empty paragraphs are replaced by a pair of <BR> elements as
# HTML4 precludes empty paragraphs.
drop-empty-paras        true

# This option specifies if Tidy should discard <FONT> and <CENTER>
# tags rather than creating the corresponding style rules, but only if
# the clean option is also set to yes.
drop-font-tags          false

# This option specifies if Tidy should insert a <P> element to enclose
# any text it finds in any element that allows mixed content for HTML
# transitional but not HTML strict.
enclose-block-text      false

# This option specifies if Tidy should enclose any text it finds in
# the body element within a <P> element. This is useful when you want to
# take existing HTML and use it with a style sheet.
enclose-text            false

# This option specifies the error file Tidy uses for errors and
# warnings. Normally errors and warnings are output to "stderr".
!error-file

# This option specifies if Tidy should replace backslash characters
# "\" in URLs by forward slashes "/".
fix-backslash           true

# This option specifies if Tidy should replace unexpected hyphens with
# "=" characters when it comes across adjacent hyphens. The default is
# yes. This option is provided for users of Cold Fusion which uses the
# comment syntax: <!--- --->
fix-bad-comments        true

# This option specifies if Tidy should change the format for reporting
# errors and warnings to a format that is more easily parsed by GNU
# Emacs.
gnu-emacs               false

# This option specifies if Tidy should omit optional end-tags when
# generating the pretty printed markup. This option is ignored if you
# are outputting to XML.
hide-endtags            false

# This option specifies if Tidy should indent block-level tags. If set
# to "auto", this option causes Tidy to decide whether or not to indent
# the content of tags such as TITLE, H1-H6, LI, TD, TD, or P depending
# on whether or not the content includes a block-level element. You are
# advised to avoid setting indent to yes as this can expose layout bugs
# in some browsers.
indent                  no

# This option specifies if Tidy should begin each attribute on a new
# line.
indent-attributes       false

# This option specifies the number of spaces Tidy uses to indent
# content, when indentation is enabled.
indent-spaces           2

# This option specifies if Tidy should use the XML parser rather than
# the error correcting HTML parser.
input-xml               false

# if yes, last modied time is preserved (not supported)
!keep-time

# This option specifies if Tidy should ensure that whitespace
# characters within attribute values are passed through unchanged.
literal-attributes      true

# This option specifies if Tidy should replace any occurrence of <I>
# by <EM> and any occurrence of <B> by <STRONG>. In both cases, the
# attributes are preserved unchanged. This option can be set
# independently of the clean and drop-font-tags options.
logical-emphasis        false

# This option specifies if Tidy should generate a pretty printed
# version of the markup. Note that Tidy won't generate a pretty printed
# version if it finds significant errors.
markup                  true

# See http://lists.w3.org/Archives/Public/html-tidy/2001JulSep/0125.html
# for an explanation of the following four define-*-tags parameters.

# This option specifies new block-level tags. This option takes a
# space or comma separated list of tag names. Unless you declare new
# tags, Tidy will refuse to generate a tidied file if the input includes
# previously unknown tags. Note you can't change the content model for
# elements such as <TABLE>, <UL>, <OL> and <DL>.
!new-blocklevel-tags

# This option specifies new empty inline tags. This option takes a
# space or comma separated list of tag names. Unless you declare new
# tags, Tidy will refuse to generate a tidied file if the input includes
# previously unknown tags. Remember to also declare empty tags as either
# inline or blocklevel.
!new-empty-tags

# This option specifies new non-empty inline tags. This option takes a
# space or comma separated list of tag names. Unless you declare new
# tags, Tidy will refuse to generate a tidied file if the input includes
# previously unknown tags.
new-inline-tags     video,audio,source,track

# This option specifies new tags that are to be processed in exactly
# the same way as HTML's <PRE> element. This option takes a space or
# comma separated list of tag names. Unless you declare new tags, Tidy
# will refuse to generate a tidied file if the input includes previously
# unknown tags. Note you can not as yet add new CDATA elements (similar
# to <SCRIPT>).
!new-pre-tags

# This option specifies if Tidy should output entities other than the
# built-in HTML entities (&amp;, &lt;, &gt; and &quot;) in the numeric
# rather than the named entity form.
numeric-entities        false


# This option specifies if Tidy should generate pretty printed output,
# writing it as extensible HTML. This option causes Tidy to set the
# DOCTYPE and default namespace as appropriate to XHTML. If a DOCTYPE or
# namespace is given they will checked for consistency with the content
# of the document. In the case of an inconsistency, the corrected values
# will appear in the output. For XHTML, entities can be written as named
# or numeric entities according to the setting of the "numeric-entities"
# option. The original case of tags and attributes will be preserved,
# regardless of other options.
output-xhtml            true

# This option specifies if Tidy should pretty print output, writing it
# as well-formed XML. Any entities not defined in XML 1.0 will be
# written as numeric entities to allow them to be parsed by a XML
# parser. The original case of tags and attributes will be preserved,
# regardless of other options.
output-xml              true

# This option specifies if Tidy should output the summary of the
# numbers of errors and warnings, or the welcome or informational
# messages.
quiet                   true

# This option specifies if Tidy should output unadorned & characters
# as &amp;.
quote-ampersand         true

# This option specifies if Tidy should output " characters as &quot;
# as is preferred by some editing environments. The apostrophe character
# ' is written out as &#39; since many web browsers don't yet support
# &apos;.
quote-marks             false

# This option specifies if Tidy should output non-breaking space
# characters as entities, rather than as the Unicode character value 160
# (decimal).
quote-nbsp              true

# if true, avoid mapping values > 127 to entities
raw                     true

# This option specifies if Tidy should suppress warnings. This can be
# useful when a few errors are hidden in a flurry of warnings.
show-warnings           false

# style sheet for slides
!slide-style

# This option specifies if Tidy should create a sequence of slides
# from the input, splitting the markup prior to each successive
# <H2>. The slides are written to "slide001.html", "slide002.html" etc.
split                   false

# This option specifies the number of columns that Tidy uses between
# successive tab stops. It is used to map tabs to spaces when reading
# the input. Tidy never outputs tabs.
# The default tab size is 4.
!tab-size

# This option specifies if Tidy should add a meta element to the
# document head to indicate that the document has been tidied. Tidy
# won't add a meta element if one is already present.
tidy-mark               false

# This option specifies if Tidy should output attribute names in upper
# case. The default is no, which results in lower case attribute names,
# except for XML input, where the original case is preserved.
uppercase-attributes    false

# This option specifies if Tidy should output tag names in upper
# case. The default is no, which results in lower case tag names, except
# for XML input, where the original case is preserved.
uppercase-tags          false

# This option specifies if Tidy should go to great pains to strip out
# all the surplus stuff Microsoft Word 2000 inserts when you save Word
# documents as "Web pages". Doesn't handle embedded images or VML.
!word-2000

# Default: 68
# This option specifies the right margin Tidy uses for line
# wrapping. Tidy tries to wrap lines so that they do not exceed this
# length. Set wrap to zero if you want to disable line wrapping.
wrap                    0


# This option specifies if Tidy should line wrap text contained within
# ASP pseudo elements, which look like: <% ... %>.
!wrap-asp


# This option specifies if Tidy should line wrap attribute values, for
# easier editing. This option can be set independently of
# wrap-script-literals.
wrap-attributes         false

# This option specifies if Tidy should line wrap text contained within
# JSTE pseudo elements, which look like: <# ... #>.
# http://www.google.com/search?q=JSTE+template+engine
!wrap-jste

# This option specifies if Tidy should line wrap text contained within
# PHP pseudo elements, which look like: <?php ... ?>.
!wrap-php

# This option specifies if Tidy should line wrap string literals that
# appear in script attributes. Tidy wraps long script string literals by
# inserting a backslash character before the line break.
wrap-script-literals    false

# This option specifies if Tidy should line wrap text contained within
# <![ ... ]> section tags.
wrap-sections           false

# This option specifies if Tidy should write back the tidied markup to
# the same file it read from. You are advised to keep copies of
# important files before tidying them, as on rare occasions the result
# may not be what you expect.
# Ignored, if you call parse(InputStream in, OutputStream out).
!write-back              true

#   ========== END CONFIG ===============