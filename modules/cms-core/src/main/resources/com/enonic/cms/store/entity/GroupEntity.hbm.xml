<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="com.enonic.cms.core.security.group" default-access="field">
  <class name="com.enonic.cms.core.security.group.GroupEntity" table="TGROUP" mutable="true">
    <cache usage="nonstrict-read-write"/>
    <id name="key" column="GRP_HKEY" type="com.enonic.cms.store.hibernate.type.GroupKeyUserType">
      <generator class="com.enonic.cms.store.hibernate.id.GroupIdentifierGenerator"/>
    </id>
    <property name="deleted" type="int">
      <column name="GRP_BISDELETED" not-null="true"/>
    </property>
    <property name="description" type="string">
      <column name="GRP_SDESCRIPTION" length="1024"/>
    </property>
    <property name="name" type="string">
      <column name="GRP_SNAME" length="255" not-null="true"/>
    </property>
    <property name="restricted" type="int">
      <column name="GRP_BRESTRICTED" not-null="true"/>
    </property>
    <property name="syncValue" type="string">
      <column name="GRP_SSYNCVALUE" length="2048" not-null="true"/>
    </property>
    <property name="type" type="int">
      <column name="GRP_LTYPE" not-null="true"/>
    </property>
    <set name="user" inverse="false" fetch="select" lazy="true">
      <cache usage="nonstrict-read-write"/>
      <key column="USR_GRP_HKEY" not-null="false"/>
      <one-to-many class="com.enonic.cms.core.security.user.UserEntity"/>
    </set>
    <many-to-one name="userStore" class="com.enonic.cms.core.security.userstore.UserStoreEntity" fetch="select">
      <column name="GRP_DOM_LKEY"/>
    </many-to-one>
    <set name="memberships" inverse="false" table="TGRPGRPMEMBERSHIP" fetch="select">
      <cache usage="nonstrict-read-write"/>
      <key>
        <column name="GGM_MBR_GRP_HKEY" length="40" not-null="true"/>
      </key>
      <many-to-many class="com.enonic.cms.core.security.group.GroupEntity" order-by="GRP_SNAME">
        <column name="GGM_GRP_HKEY" length="40" not-null="true"/>
      </many-to-many>
    </set>
    <set name="members" inverse="true" table="TGRPGRPMEMBERSHIP" fetch="select">
      <cache usage="nonstrict-read-write"/>
      <key>
        <column name="GGM_GRP_HKEY" length="40" not-null="true"/>
      </key>
      <many-to-many class="com.enonic.cms.core.security.group.GroupEntity" order-by="GRP_SNAME">
        <column name="GGM_MBR_GRP_HKEY" length="40" not-null="true"/>
      </many-to-many>
    </set>
  </class>
  <query name="GroupEntity.findAll" cacheable="true">
    from GroupEntity as x where x.deleted &lt;= :deleted
  </query>
  <query name="GroupEntity.findByGroupType" cacheable="true">
    from GroupEntity as x
    where x.type = :groupType
    and x.deleted = 0
  </query>
  <query name="GroupEntity.findByGroupTypeAndUserStore" cacheable="true">
    from GroupEntity as x
    where x.type = :groupType
    and x.deleted = 0
    and x.userStore.key = :userStoreKey
  </query>
  <query name="GroupEntity.findByUserStoreAndSyncValue" cacheable="true">
    from GroupEntity as x
    where x.userStore.key = :userStoreKey
    and x.deleted &lt;= :deleted
    and x.syncValue = :syncValue
  </query>
  <query name="GroupEntity.findByUserStore" cacheable="true">
    from GroupEntity as x
    where x.userStore.key = :userStoreKey
    and x.deleted &lt;= :deleted
  </query>
  <sql-query name="GroupEntity.findByQualifiedGroupname" cacheable="true">
    <return alias="grp" class="com.enonic.cms.core.security.group.GroupEntity"/>
    SELECT {grp.*}
    FROM tgroup grp
    WHERE ( grp.grp_dom_lkey = :userStoreKey )
    AND grp.grp_sname = :name
    AND grp.grp_bisdeleted &lt;= :deleted
  </sql-query>
</hibernate-mapping>
