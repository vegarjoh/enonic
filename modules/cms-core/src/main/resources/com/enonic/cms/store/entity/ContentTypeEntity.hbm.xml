<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="com.enonic.cms.core.content" default-access="field">
  <class name="com.enonic.cms.core.content.contenttype.ContentTypeEntity" table="TCONTENTTYPE" mutable="true" batch-size="100">
    <cache usage="nonstrict-read-write"/>
    <id name="key" type="int">
      <column name="CTY_LKEY"/>
      <generator class="assigned"/>
    </id>
    <property name="data" type="com.enonic.cms.store.hibernate.type.LazyInitializedJDOMDocumentUserType">
      <column name="CTY_MBDATA" length="1000000"/>
    </property>
    <property name="description" type="string">
      <column name="CTY_SDESCRIPTION" length="256"/>
    </property>
    <property name="name" type="string">
      <column name="CTY_SNAME" length="32" not-null="true"/>
    </property>
    <property name="timestamp" type="timestamp">
      <column name="CTY_DTETIMESTAMP" not-null="true"/>
    </property>
    <property name="defaultCssKey" type="com.enonic.cms.store.hibernate.type.ResourceKeyUserType">
      <column name="CTY_SCSS" length="1024"/>
    </property>
    <many-to-one name="contentHandler" class="com.enonic.cms.core.content.contenttype.ContentHandlerEntity" fetch="select">
      <column name="CTY_HAN_LKEY" not-null="true"/>
    </many-to-one>
    <set name="categories" inverse="true" order-by="CAT_CTY_LKEY">
      <cache usage="nonstrict-read-write"/>
      <key>
        <column name="CAT_CTY_LKEY"/>
      </key>
      <one-to-many class="com.enonic.cms.core.content.category.CategoryEntity"/>
    </set>
  </class>
  <query name="ContentTypeEntity.getResourceUsageCountCSS" cacheable="true" read-only="true">
    select defaultCssKey as resourceKey, count(*) as count
    from ContentTypeEntity where cty_scss is not null group by cty_scss
  </query>
  <query name="ContentTypeEntity.findByCSS" cacheable="true" read-only="false">

    from ContentTypeEntity x where x.defaultCssKey = :defaultCssKey
  </query>
  <query name="ContentTypeEntity.findByCSSPrefix" cacheable="true" read-only="false">

    from ContentTypeEntity x where x.defaultCssKey like :defaultCssKeyPrefix
  </query>
  <query name="ContentTypeEntity.getAll" cacheable="true" read-only="true">
    from ContentTypeEntity
  </query>
  <query name="ContentTypeEntity.getByName" cacheable="true" read-only="true">
    from ContentTypeEntity x where x.name =:name
  </query>
</hibernate-mapping>
